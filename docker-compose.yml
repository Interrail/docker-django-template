version: '3'

services:
    nginx:
        restart: always
        image: nginx:1.23-alpine
        ports:
            - 80:80
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            # Django static
            - static_volume:/app/backend/static
    server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/server-entrypoint.sh
        volumes:
            # Django static
            - static_volume:/app/backend/static
        ports:
            - 8000:8000
        environment:
            DEBUG: "True"
            ALLOWED_HOSTS: ${ALLOWED_HOSTS}
            CELERY_BROKER_URL: "redis://default:${REDIS_PASSWORD}@redis:6379/0"
            CELERY_RESULT_BACKEND: "redis://default:${REDIS_PASSWORD}@redis:6379/0"
            POSTGRES_HOST: ${POSTGRES_HOST}
            POSTGRES_NAME: ${POSTGRES_NAME}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_PORT: ${POSTGRES_PORT}
    worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/worker-entrypoint.sh
        volumes:
            # Django static
            - static_volume:/app/backend/static
        environment:
            DEBUG: "True"
            ALLOWED_HOSTS: ${ALLOWED_HOSTS}
            CELERY_BROKER_URL: "redis://default:${REDIS_PASSWORD}@redis:6379/0"
            CELERY_RESULT_BACKEND: "redis://default:${REDIS_PASSWORD}@redis:6379/0"
            POSTGRES_HOST: ${POSTGRES_HOST}
            POSTGRES_NAME: ${POSTGRES_NAME}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_PORT: ${POSTGRES_PORT}
        depends_on:
            - server
            - redis
    redis:
        restart: unless-stopped
        image: redis:7.2.1-alpine 
        command: >
          --requirepass ${REDIS_PASSWORD}
        ports:
            - ${REDIS_PORT}:${REDIS_PORT}
    db:
        image: postgres:14.0-alpine
        restart: unless-stopped
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            POSTGRES_DB: ${POSTGRES_NAME}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - ${POSTGRES_PORT}:5432
    

volumes:
    static_volume: {}
    postgres_data: {}
